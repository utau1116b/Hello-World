@DUNGEON
DRAWLINE
PRINTL 探索する場所を選択してください
;CALL SHOW_DUNGEONLIST
;SIF RESULT == -1
;	RETURN 0
;LOCAL = RESULT
LOCAL = 1
FLAG:現ダンジョン = LOCAL
;スタート地点を呼び出し(現M、現X、現Yにそれぞれ代入)
CALLFORM START_DUNGEON_{FLAG:現ダンジョン}
;現在のフロアデータを読み込み
CALL MAKE_FLOOR, FLAG:現ダンジョン
CALL AUTOMAP
FLAG:ダンジョン探索済み = 1

;ダンジョン開始時のイベント
;TRYCALLFORM EVENT_DUNGEON_START_{FLAG:現ダンジョン}
;FLAG:逃走不可フラグ = 0
;FLAG:会話不能フラグ = 0
;FLAG:先制不意打ちキャンセル = 0
;---- EDIT 015 ADD START -------------------------
;探索に参加可能なキャラの衣装を設定、PALAM・SOURCE・EXを初期化
;FOR LOCAL , 0 , CHARANUM
;	SIF CFLAG:LOCAL:戦闘参加不可能 == 1
;		CONTINUE
;	SIF (ABL:LOCAL:種族 == 0 || CFLAG:LOCAL:召喚不可 || CFLAG:LOCAL:所属ＣＯＭＰ == -1) && CFLAG:LOCAL:PTフラグ == 1
;		CONTINUE
;	CALL CLOTHES_TRAIN,LOCAL,1
;	VARSET PALAM:LOCAL:0 , 0
;	VARSET SOURCE:LOCAL:0 , 0
;	VARSET EX:LOCAL:0 , 0
;NEXT
;---- EDIT 015 ADD END   -------------------------
CALL DUNGEON_ATTACK
;---- EDIT 015 ADD START -------------------------
;探索に参加可能なキャラの衣装を保存
;FOR LOCAL , 0 , CHARANUM
;	SIF CFLAG:LOCAL:戦闘参加不可能 == 1
;		CONTINUE
;	SIF (ABL:LOCAL:種族 == 0 || CFLAG:LOCAL:召喚不可 || CFLAG:LOCAL:所属ＣＯＭＰ == -1) && CFLAG:LOCAL:PTフラグ == 1
;		CONTINUE
;	CALL CLOTHES_TRAIN,LOCAL,1
;NEXT
;---- EDIT 015 ADD END   -------------------------
;---- EDIT 002 ADD START -------------------------
;ここに来れないASSI及び健在でないASSIを排除する
;IF FLAG:ダンジョン内調教 == 1
;	FLAG:ダンジョン内調教助手退避 = ASSI
;	SIF ASSI >= 0 && ABL:ASSI:種族 == 0 && CFLAG:ASSI:PTフラグ == 1
;		ASSI = -1
;	SIF ASSI >= 0 && GET_STATE(CFLAG:ASSI:ステート) != "GOOD"
;		ASSI = -1
;	BEGIN TRAIN
;ENDIF
;---- EDIT 002 ADD END   -------------------------

;SIF FLAG:ダンジョン内調教 == 1
;	BEGIN TRAIN
FLAG:脱出 = 0
;---- EDIT 003 ADD START -------------------------
;日付変更時の処理に移動
;SIF FLAG:トリッシュの泉利用回数 > 0
;	FLAG:トリッシュの泉利用回数 = 1
;SIF FLAG:トリッシュ調教 == -1
;	FLAG:トリッシュ調教 = -2
;---- EDIT 003 ADD START -------------------------

;FLAG:ショップコマンド = 0
;FLAG:ソーマギフト = 0
;FLAG:宝玉輪ギフト = 0
;FOR LOCAL,0,CHARANUM
;	SIF CFLAG:LOCAL:悪魔変身 == 1
;		CALL ACTION_2310 , LOCAL , 0
;NEXT
BEGIN SHOP
RESTART
;=====================================================================
;現在のダンジョンの現在のフロアのANALYZE情報獲得
;引数はＸ・Ｙ
;描画速度改善用
;=====================================================================
@GET_FLOOR_ANALYZE_T, ARG, ARG:1
#FUNCTION
;RETURNF DA:ARG:(ARG:1+100)
RETURNF DPOINT("GET" , , ARG , ARG:1 , FLAG:現M , @"ダンジョン%TOSTR(FLAG:現ダンジョン , "00")%")

;=====================================================================
;フロアのANALYZE情報設置
;ARGは代入する数値で、
;以降の引数はそれぞれ、ダンジョン・階層・Ｘ・Ｙを示す
;=====================================================================
@SET_FLOOR_ANALYZE, ARG, ARG:1, ARG:2, ARG:3, ARG:4
#LOCALSIZE 1
;現在のFLOORのANALYZE情報も同時に更新
CALLF DPOINT("SET" , ARG , ARG:3 , ARG:4 , ARG:2 , @"ダンジョン%TOSTR(ARG:1 , "00")%")

;DA:(ARG:3):(ARG:4+100) = ARG
;LOCAL = ARG:3+ARG:4*FLAG:最大X
;SAVESTR:GET_FLOOR_ANALYZE_NUM(ARG:1, ARG:2) = %SUBSTRING(SAVESTR:GET_FLOOR_ANALYZE_NUM(ARG:1, ARG:2), 0, LOCAL)%%TOSTR(ARG)%%SUBSTRING(SAVESTR:GET_FLOOR_ANALYZE_NUM(ARG:1, ARG:2), LOCAL+1)%
RETURN 0

;=====================================================================
;フロアデータ作成処理
;引数はダンジョン番号
;=====================================================================
@MAKE_FLOOR, ARG
;ダンジョンごとのフロアデータを取りに行く
CALLFORM MAKE_FLOOR_{ARG}

;=====================================================================
;歩いて移動
;=====================================================================
@WALK_DUNGEON,ARG
LOCAL = 0
SELECTCASE ARG
	CASE 7
		FLAG:現Y -= 1
		FLAG:現X -= 1
	CASE 8
		FLAG:現Y -= 1
	CASE 9
		FLAG:現Y -= 1
		FLAG:現X += 1
	CASE 4
		FLAG:現X -= 1
	CASE 6
		FLAG:現X += 1
	CASE 1
		FLAG:現Y += 1
		FLAG:現X -= 1
	CASE 2
		FLAG:現Y += 1
	CASE 3
		FLAG:現Y += 1
		FLAG:現X += 1
ENDSELECT

;ＭＡＧ消費
;CALL CONSUME_MAG

;ガリバーマジック
;IF EQUIP:MASTER:ガリバー・マジック == 1 && !FLAG:COMP使用不能
;	FOR LOCAL,1,7
;		LOCALS = ポジション{LOCAL}
;		IF FLAG:LOCALS > -1 && TALENT:(FLAG:LOCALS):サマナー && (TALENT:(FLAG:LOCALS):異能者 == 0 && TALENT:(FLAG:LOCALS):ペルソナ使い == 0 && CFLAG:(FLAG:LOCALS):悪魔変身 == 0 && TALENT:(FLAG:LOCALS):達人 == 0)
;			SELECTCASE GET_STATE(CFLAG:(FLAG:LOCALS):ステート)
;				CASE "DYING","STONE","FLY","PALYZE","BIND","CHARM","SLEEP","PANIC"
;					CONTINUE
;				CASEELSE
;					CALL VAR_HP,FLAG:LOCALS,1,3
;			ENDSELECT
;		ENDIF
;	NEXT
;ENDIF

CALL AUTOMAP
;毒などのチェック
;FOR LOCAL,1,7
;	LOCALS = ポジション{LOCAL}
;	IF FLAG:LOCALS > -1
;		LOCAL:1 = FLAG:LOCALS
;		IF FLAG:ムフフ展開
;	
;			;一歩ごとに体力が5回復する（最大値は気力の現在値）
;			SIF BASE:(LOCAL:1):体力 < BASE:(LOCAL:1):気力
;				BASE:(LOCAL:1):体力 += 5
;			
;			;精液の箇所ひとつに付き欲情が1+精液中毒ＬＶ分増える
;			PALAM:(LOCAL:1):欲情 += GET_STAIN("膣内" , "精液" , LOCAL:1) * (1 + ABL:(LOCAL:1):精液中毒)
;			PALAM:(LOCAL:1):欲情 += GET_STAIN("ヴァギナ" , "精液" , LOCAL:1) * (1 + ABL:(LOCAL:1):精液中毒)
;			PALAM:(LOCAL:1):欲情 += GET_STAIN("口" , "精液" , LOCAL:1) * (1 + ABL:(LOCAL:1):精液中毒)
;			PALAM:(LOCAL:1):欲情 += GET_STAIN("手" , "精液" , LOCAL:1) * (1 + ABL:(LOCAL:1):精液中毒)
;			PALAM:(LOCAL:1):欲情 += GET_STAIN("胸" , "精液" , LOCAL:1) * (1 + ABL:(LOCAL:1):精液中毒)
;			PALAM:(LOCAL:1):欲情 += GET_STAIN("アナル" , "精液" , LOCAL:1) * (1 + ABL:(LOCAL:1):精液中毒)
;			PALAM:(LOCAL:1):欲情 += GET_STAIN("髪" , "精液" , LOCAL:1) * (1 + ABL:(LOCAL:1):精液中毒)
	
			;アソコと乳首が露出していると露出癖ＬＶ分欲情が増える
;			SIF TEQUIP:(LOCAL:1):乳首露出 == -1
;				PALAM:(LOCAL:1):欲情 += ABL:(LOCAL:1):露出癖
;			SIF TEQUIP:(LOCAL:1):陰唇露出 == -1
;				PALAM:(LOCAL:1):欲情 += ABL:(LOCAL:1):露出癖
;			SIF 危険日(LOCAL:1) == 2
;				PALAM:(LOCAL:1):欲情 += 15 * ABL:(LOCAL:1):欲望
			
			;膣内が精液で汚れている場合は10％の確率でヴァギナに汚れが付く
;			IF GET_STAIN("膣内" , "精液" , LOCAL:1) && GET_STAIN("ヴァギナ" , "精液" , LOCAL:1) == 0 && RAND:100 < 10
;				SETCOLOR COLOR("pink")
;				PRINTFORMW %CALLNAME:(LOCAL:1)%の中に注がれた精液が垂れてきた…
;				RESETCOLOR
;				CALL SET_STAIN("ヴァギナ" , "精液" , LOCAL:1)
;			ENDIF
		
			;欲情一定値以下で発情終了
;			IF  PALAM:(LOCAL:1):欲情 < 2000 && CFLAG:(LOCAL:1):ダンジョン内発情
;				CFLAG:(LOCAL:1):ダンジョン内発情 = 0
;				PRINTFORMW %CALLNAME:(LOCAL:1)%は落ち着いた
;			ENDIF
	
			;欲情が10000以上になる、または5000以上で素質『発情可』があると発情する
;			IF TALENT:(LOCAL:1):オトコ == 0 && CFLAG:(LOCAL:1):ダンジョン内発情 == 0 && PALAM:(LOCAL:1):欲情 >= 10000 / POWER(2 , (TALENT:(LOCAL:1):発情可) + (危険日(LOCAL:1) == 2 ))
;				CFLAG:(LOCAL:1):ダンジョン内発情 = 1
;				SETCOLOR COLOR("pink")
;				PRINTFORMW %CALLNAME:(LOCAL:1)%は頭の中がピンクに染まった
;				RESETCOLOR
			;発情状態の時に30％の確率でHAPPYになる
;			ELSEIF RAND:100 < 30 && CFLAG:(LOCAL:1):ダンジョン内発情 && CFLAG:(LOCAL:1):ステート != GET_STATE_NUM("HAPPY")
;				CFLAG:(LOCAL:1):ステート = GET_STATE_NUM("HAPPY")
;			ENDIF
			;素質『発情可』を持っていると魅了状態時に10％の確率で発情する
;			IF TALENT:(LOCAL:1):オトコ == 0 && CFLAG:(LOCAL:1):ステート == GET_STATE_NUM("CHARM") && TALENT:(LOCAL:1):発情可 && CFLAG:(LOCAL:1):ダンジョン内発情 == 0 && RAND:100 < 10
;				CFLAG:(LOCAL:1):ダンジョン内発情 = 1
;				SETCOLOR COLOR("pink")
;				PRINTFORMW %CALLNAME:(LOCAL:1)%は頭の中がピンクに染まった
;				RESETCOLOR
;			ENDIF
;		ENDIF
;
;		IF CFLAG:(LOCAL:1):ステート > 0
;			;気力0と発情しているときは、ステート経過ターンが増えない
;			SIF !(FLAG:ムフフ展開 && (BASE:(ARG:1):気力 == 0 || 危険日(LOCAL:1) >= 2))
;				CFLAG:(LOCAL:1):ステート経過ターン += FLAG:未遭遇歩数/2
;			;バッドステータス・セービング
;			CALL BADSTATUS_SAVING,LOCAL:1
;			;毒ならダメージ
;			SIF CFLAG:(LOCAL:1):ステート == GET_STATE_NUM("POISON") && FLAG:未遭遇歩数 % 4 == 0
;				CALL VAR_HP,LOCAL:1,-MAX(MAXBASE:(LOCAL:1):ＭＰ/16,1),3
;			;麻痺ならMP減少
;			SIF CFLAG:(LOCAL:1):ステート == GET_STATE_NUM("PALYZE") && FLAG:未遭遇歩数 % 4 == 0
;				CALL VAR_MP,LOCAL:1,-MAX(MAXBASE:(LOCAL:1):ＭＰ/16,1),3
;			CFLAG:(LOCAL:1):ステート経過ターン -= FLAG:未遭遇歩数/2
;		ENDIF
;	ENDIF
;NEXT

LOCAL = 0
;移動後のダンジョンイベント呼び出し
SELECTCASE DA:(FLAG:現X):(FLAG:現Y)
	CASE -9
	;	CALL DUNGEON_TERMINAL
	CASE -19
	;	CALL FOUNTAIN_OF_TRISH
	CASE -29
		CALL DUNGEON_ELEVATOR
	CASEELSE
		CALLFORM EVENT_ENTER_DUNGEON_{FLAG:現ダンジョン},ARG
ENDSELECT

SIF RESULT || FLAG:エンカウントしない || FLAG:脱出
	LOCAL = 1

;遭遇チェック
IF LOCAL == 0
	IF FLAG:エンカウント変動 == 1
		FLAG:エンカウント変動2 = FLAG:エンカウント率
		FLAG:エンカウント率 = (FLAG:エンカウント変動2)/2
	ELSEIF FLAG:エンカウント変動 == 2
		FLAG:エンカウント変動2 = FLAG:エンカウント率
		FLAG:エンカウント率 = (FLAG:エンカウント変動2)*2
	ENDIF
	LOCAL:3 = FLAG:エンカウント率補正 + 100
	;SIF EQUIP:MASTER:エネミーホイホイ && NUM_SUMMONER()
	;	LOCAL:3 *= 2
	;SIF EQUIP:MASTER:エネミーバイバイ && NUM_SUMMONER()
	;	LOCAL:3 /= 2
	$ENCOUNT_START
	SIF RAND:100 <= LOCAL:3
		CALLFORM CHECK_ENCOUNT_{FLAG:現ダンジョン}
	IF RESULT == 1
		LOCAL:1 = 1
;---- EDIT 004 MOD START -------------------------
;		IF FLAG:エストマ
		;IF FLAG:エストマ || ( EQUIP:MASTER:キャプス・ロック && NUM_SUMMONER() )
		;	LOCAL:30 = 0
;---- EDIT 004 MOD END ---------------------------
		;	LOCAL:1 = 0
		;	LOCAL:2 = 0
		;	FOR LOCAL, 1, 7
;---- EDIT 004 MOD START -------------------------
;				SIF POS(LOCAL) >= 0
		;		IF POS(LOCAL) >= 0
		;			LOCAL:2 += BASE:POS(LOCAL):LV
		;			LOCAL:30 += 1
		;		ENDIF
;---- EDIT 004 MOD END ---------------------------
		;	NEXT
		;	FOR LOCAL, 7, 17
		;		IF POS(LOCAL) >= 0
;---- EDIT 004 DEL START -------------------------
;					IF BASE:POS(LOCAL):LV < LOCAL:2 / 6
;						CALL キャラ削除(POS(LOCAL))
;					ELSE
;						LOCAL:1 = 1
;					ENDIF
;---- EDIT 004 DEL END ---------------------------
;---- EDIT 004 ADD START -------------------------
					;CHK:エストマ (式: 敵LV < 味方合計LV / 6)
		;			IF FLAG:エストマ && ( BASE:POS(LOCAL):LV < LOCAL:2 / 6 )
		;				CALL キャラ削除(POS(LOCAL))
					;CHK:キャプス・ロック (式: 敵LV < 主人LV - 12)
		;			ELSEIF ( EQUIP:MASTER:キャプス・ロック && NUM_SUMMONER() ) && ( BASE:POS(LOCAL):LV <= BASE:MASTER:LV - 12 )
		;				CALL キャラ削除(POS(LOCAL))
					;その他
		;			ELSE
		;				LOCAL:1 = 1
		;			ENDIF
;---- EDIT 004 ADD END ---------------------------
		;		ENDIF
		;	NEXT
		;ENDIF
		;FLAG:未遭遇歩数 = 0
		;IF LOCAL:1 > 0
		;	PRINTW 悪魔と遭遇した！
		;	CALL BATTLE_START
		;ENDIF
	ENDIF
	LOCAL:3 -= 100
	SIF LOCAL:3 > 0
		GOTO ENCOUNT_START
	SIF FLAG:エンカウント変動 == 1 && RESULT != 1
		FLAG:エンカウント率 = FLAG:エンカウント変動2
	SIF FLAG:エンカウント変動 == 2 && RESULT != 1
		FLAG:エンカウント率 = FLAG:エンカウント変動2
	IF RESULT == 1
		PRINTW ライバルと遭遇した！
		FLAG:未遭遇歩数 = 0
		CALL BATTLE_START,0,0,0
	ENDIF
ENDIF
;CALL MOVE_MOON
CALL AUTOMAP


RETURN 1
;=====================================================================
;オートマッピング登録処理
;=====================================================================
@AUTOMAP
IF DA:(FLAG:現X):(FLAG:現Y) == -1
; && (EQUIP:MASTER:ダークスキャナー == 0 || NUM_SUMMONER() == 0) && FLAG:ライトマ == 0
	;CALL SET_FLOOR_ANALYZE(MAX(GET_FLOOR_ANALYZE_T(FLAG:現X+1, FLAG:現Y) ,1), FLAG:現ダンジョン, FLAG:現M, FLAG:現X+1, FLAG:現Y)
	;CALL SET_FLOOR_ANALYZE(MAX(GET_FLOOR_ANALYZE_T(FLAG:現X-1, FLAG:現Y) ,1), FLAG:現ダンジョン, FLAG:現M, FLAG:現X-1, FLAG:現Y)
	;CALL SET_FLOOR_ANALYZE(MAX(GET_FLOOR_ANALYZE_T(FLAG:現X, FLAG:現Y+1) ,1), FLAG:現ダンジョン, FLAG:現M, FLAG:現X, FLAG:現Y+1)
	;CALL SET_FLOOR_ANALYZE(MAX(GET_FLOOR_ANALYZE_T(FLAG:現X, FLAG:現Y-1) ,1), FLAG:現ダンジョン, FLAG:現M, FLAG:現X, FLAG:現Y-1)
	;TA:((FLAG:現M*100+FLAG:現ダンジョン)):(FLAG:現X+1):(FLAG:現Y) = MAX(TA:((FLAG:現M*100+FLAG:現ダンジョン)):(FLAG:現X+1):(FLAG:現Y), 1)
	;TA:((FLAG:現M*100+FLAG:現ダンジョン)):(FLAG:現X-1):(FLAG:現Y) = MAX(TA:((FLAG:現M*100+FLAG:現ダンジョン)):(FLAG:現X-1):(FLAG:現Y), 1)
	;TA:((FLAG:現M*100+FLAG:現ダンジョン)):(FLAG:現X):(FLAG:現Y+1) = MAX(TA:((FLAG:現M*100+FLAG:現ダンジョン)):(FLAG:現X):(FLAG:現Y+1), 1)
	;TA:((FLAG:現M*100+FLAG:現ダンジョン)):(FLAG:現X):(FLAG:現Y-1) = MAX(TA:((FLAG:現M*100+FLAG:現ダンジョン)):(FLAG:現X):(FLAG:現Y-1), 1)
	GOTO DARK
ENDIF
;CALLFORM GET_DUNGEON_NAME_{FLAG:現ダンジョン}
;CALLF DPOINT( , , 0 , 0 , FLAG:現M , RESULTS)
CALLF DPOINT( , , 0 , 0 , FLAG:現M , @"ダンジョン%TOSTR(FLAG:現ダンジョン,"00")%")

FOR LOCAL,0,5
	SIF (FLAG:現X+LOCAL-2) < 0 || (FLAG:現X+LOCAL-2) >= FLAG:最大X
		CONTINUE
	FOR LOCAL:1,0,5
		SIF (FLAG:現Y+LOCAL:1-2) < 0 || (FLAG:現Y+LOCAL:1-2) >= FLAG:最大Y
			CONTINUE
		;IF TA:((FLAG:現M*100+FLAG:現ダンジョン)):(FLAG:現X+LOCAL-2):(FLAG:現Y+LOCAL:1-2) == 0
		;IF GET_FLOOR_ANALYZE_T(FLAG:現X+LOCAL-2, FLAG:現Y+LOCAL:1-2) == 0
		IF DPOINT( , , (FLAG:現X+LOCAL-2) , (FLAG:現Y+LOCAL:1-2)) == 0
			SELECTCASE LOCAL
				CASE 0
					SELECTCASE LOCAL:1
						CASE 0
							CALL CAN_SEE_THROUGH,(FLAG:現X-1),(FLAG:現Y-1)
							SIF RESULT == 0
								CONTINUE
							;SIF DA:(FLAG:現X-1):(FLAG:現Y-1) % 10 == 0 || DA:(FLAG:現X-1):(FLAG:現Y-1) % 10 == 2
								;CONTINUE
;						CASE 1
;							SIF (DA:(FLAG:現X-1):(FLAG:現Y-1) % 10 == 0 || DA:(FLAG:現X-1):(FLAG:現Y-1) % 10 == 2) && (DA:(FLAG:現X-1):(FLAG:現Y) == 0 || DA:(FLAG:現X-1):(FLAG:現Y) == 2)
;								CONTINUE
						CASE 1,2,3
							CALL CAN_SEE_THROUGH,(FLAG:現X-1),(FLAG:現Y)
							SIF RESULT == 0
								CONTINUE
						;	SIF (DA:(FLAG:現X-1):(FLAG:現Y) % 10 == 0 || DA:(FLAG:現X-1):(FLAG:現Y) % 10 == 2)
						;		CONTINUE
;						CASE 3
;							SIF (DA:(FLAG:現X-1):(FLAG:現Y+1) == 0 || DA:(FLAG:現X-1):(FLAG:現Y+1) == 2) && (DA:(FLAG:現X-1):(FLAG:現Y) == 0 || DA:(FLAG:現X-1):(FLAG:現Y) == 2)
;								CONTINUE
						CASE 4
							CALL CAN_SEE_THROUGH,(FLAG:現X-1),(FLAG:現Y+1)
							SIF RESULT == 0
								CONTINUE
;							SIF DA:(FLAG:現X-1):(FLAG:現Y+1) % 10 == 0 || DA:(FLAG:現X-1):(FLAG:現Y+1) % 10 == 2
;								CONTINUE
						
					ENDSELECT
				CASE 1,2,3
					SELECTCASE LOCAL:1
						CASE 0
							CALL CAN_SEE_THROUGH,(FLAG:現X),(FLAG:現Y-1)
							SIF RESULT == 0
								CONTINUE
;							SIF (DA:(FLAG:現X-1):(FLAG:現Y-1) == 0 || DA:(FLAG:現X-1):(FLAG:現Y-1) == 2) && (DA:(FLAG:現X):(FLAG:現Y-1) == 0 || DA:(FLAG:現X):(FLAG:現Y-1) == 2)
						;	SIF (DA:(FLAG:現X):(FLAG:現Y-1) % 10 == 0 || DA:(FLAG:現X):(FLAG:現Y-1) % 10 == 2)
						;		CONTINUE
						CASE 4
;							SIF (DA:(FLAG:現X-1):(FLAG:現Y+1) == 0 || DA:(FLAG:現X-1):(FLAG:現Y+1) == 2) && (DA:(FLAG:現X):(FLAG:現Y+1) == 0 || DA:(FLAG:現X):(FLAG:現Y+1) == 2)
							CALL CAN_SEE_THROUGH,(FLAG:現X),(FLAG:現Y+1)
							SIF RESULT == 0
								CONTINUE
;							SIF (DA:(FLAG:現X):(FLAG:現Y+1) % 10 == 0 || DA:(FLAG:現X):(FLAG:現Y+1) % 10 == 2)
;								CONTINUE
					ENDSELECT
;				CASE 2
;					SELECTCASE LOCAL:1
;						CASE 0
;							SIF (DA:(FLAG:現X):(FLAG:現Y-1) == 0 || DA:(FLAG:現X):(FLAG:現Y-1) == 2)
;								CONTINUE
;						CASE 4
;							SIF (DA:(FLAG:現X):(FLAG:現Y+1) == 0 || DA:(FLAG:現X):(FLAG:現Y+1) == 2)
;								CONTINUE
;					ENDSELECT
;				CASE 3
;					SELECTCASE LOCAL:1
;						CASE 0
;							SIF (DA:(FLAG:現X+1):(FLAG:現Y-1) == 0 || DA:(FLAG:現X+1):(FLAG:現Y-1) == 2) && (DA:(FLAG:現X):(FLAG:現Y-1) == 0 || DA:(FLAG:現X):(FLAG:現Y-1) == 2)
;								CONTINUE
;						CASE 4
;							SIF (DA:(FLAG:現X+1):(FLAG:現Y+1) == 0 || DA:(FLAG:現X+1):(FLAG:現Y+1) == 2) && (DA:(FLAG:現X):(FLAG:現Y+1) == 0 || DA:(FLAG:現X):(FLAG:現Y+1) == 2)
;								CONTINUE
;					ENDSELECT
				CASE 4
					SELECTCASE LOCAL:1
						CASE 0
							CALL CAN_SEE_THROUGH,(FLAG:現X+1),(FLAG:現Y-1)
							SIF RESULT == 0
								CONTINUE
							;SIF DA:(FLAG:現X+1):(FLAG:現Y-1) % 10 == 0 || DA:(FLAG:現X+1):(FLAG:現Y-1) % 10 == 2
							;	CONTINUE
;						CASE 1
;							SIF (DA:(FLAG:現X+1):(FLAG:現Y-1) == 0 || DA:(FLAG:現X+1):(FLAG:現Y-1) == 2) && (DA:(FLAG:現X+1):(FLAG:現Y) == 0 || DA:(FLAG:現X+1):(FLAG:現Y) == 2)
;								CONTINUE
						CASE 1,2,3
							CALL CAN_SEE_THROUGH,(FLAG:現X+1),(FLAG:現Y)
							SIF RESULT == 0
								CONTINUE
							;SIF (DA:(FLAG:現X+1):(FLAG:現Y) % 10 == 0 || DA:(FLAG:現X+1):(FLAG:現Y) % 10 == 2)
							;	CONTINUE
;						CASE 3
;							SIF (DA:(FLAG:現X+1):(FLAG:現Y+1) == 0 || DA:(FLAG:現X+1):(FLAG:現Y+1) == 2) && (DA:(FLAG:現X+1):(FLAG:現Y) == 0 || DA:(FLAG:現X+1):(FLAG:現Y) == 2)
;								CONTINUE
						CASE 4
							CALL CAN_SEE_THROUGH,(FLAG:現X+1),(FLAG:現Y+1)
							SIF RESULT == 0
								CONTINUE
						;	SIF DA:(FLAG:現X+1):(FLAG:現Y+1) % 10 == 0 || DA:(FLAG:現X+1):(FLAG:現Y+1) % 10 == 2
						;		CONTINUE
						
					ENDSELECT
				
			ENDSELECT
			;TA:(FLAG:現M*100+FLAG:現ダンジョン):(FLAG:現X+LOCAL-2):(FLAG:現Y+LOCAL:1-2) = 1
			
			;CALL SET_FLOOR_ANALYZE(1, FLAG:現ダンジョン, FLAG:現M, FLAG:現X+LOCAL-2, FLAG:現Y+LOCAL:1-2)
			CALLF DPOINT( "=" , 1)
			;SIF DPOINT( "=" , 1)
			;	CONTINUE
		ENDIF
			
	NEXT
NEXT
$DARK
;CALL SET_FLOOR_ANALYZE(2, FLAG:現ダンジョン, FLAG:現M, FLAG:現X, FLAG:現Y)
CALLF DPOINT( "=" , 2 , FLAG:現X , FLAG:現Y)

;=====================================================================
;タイルの向こう側を透過出来るかの処理
;=====================================================================
@CAN_SEE_THROUGH,ARG,ARG:1
TRYCCALLFORM CAN_SEE_THROUGH_{FLAG:現ダンジョン}_{DA:ARG:(ARG:1)%10},DA:ARG:(ARG:1),ARG,ARG:1
	RETURN RESULT
CATCH

	IF DA:ARG:(ARG:1) % 10 == 0
		;側面なら見通せる(もしくは指定有りの上面)
		IF DA:ARG:(ARG:1) == 10 || DA:ARG:(ARG:1) == 20 || DA:ARG:(ARG:1) == 30 || DA:ARG:(ARG:1) == 40
		
		;壁の上なら見通せない
		ELSE
			RETURN 0
		ENDIF
	ENDIF
	
	;扉は見通せない
	SIF DA:ARG:(ARG:1) % 10 == 2
		RETURN 0
	SIF DA:ARG:(ARG:1) == -1
	; && (EQUIP:MASTER:ダークスキャナー == 0 || NUM_SUMMONER() == 0) && FLAG:ライトマ == 0
		RETURN 0
ENDCATCH
RETURN 1


;=====================================================================
;ダンジョン攻略のメイン処理
;=====================================================================
@DUNGEON_ATTACK
#LOCALSIZE 1

;終了条件が満たされるまで処理を繰り返す

WHILE 1 == 1
	FLAG:ウィンドウメッセージスキップ = 0
	;CALL REFRESH_FORMATION
	$PRINT
	;SIF FLAG:ダンジョン内調教 == 1
	;	BREAK
	;脱出フラグ立ってたら終わり
	IF FLAG:脱出
		TRYCALLFORM EVENT_DUNGEON_END_{FLAG:現ダンジョン}
		FLAG:脱出スキル禁止 = 0
		BREAK
	ENDIF
	REDRAW 0
	;遭遇率を読みこみ
	CALLFORM ENCOUNT_RATE_{FLAG:現ダンジョン}
	;FLAG:エンカウント率 = FLAG:エンカウント率 * (100 + FLAG:エンカウント率補正) / 100
	;ダンジョンを描画
	CALL SHOW_FLOOR
	;現パーティ描画
	CALL SHOW_NOW_FORMATION_U
	FLAG:コマンド表示行数 = LINECOUNT
	;コマンド表示
	CALL SHOW_DUNGEON_COMMAND
	
	;入力待ち
	$INPUT_LOOP
	ONEINPUTS
	REDRAW 1
	SELECTCASE FLAG:ダンジョン内操作設定
		CASE 0
			SELECTCASE RESULTS
				CASE "5"
					SELECTCASE DA:(FLAG:現X):(FLAG:現Y)
						CASE -9
						;	CALL DUNGEON_TERMINAL
						CASE -19
						;	CALL FOUNTAIN_OF_TRISH
						CASE -29
							CALL DUNGEON_ELEVATOR
						CASEELSE
							CALLFORM EVENT_CHECK_DUNGEON_{FLAG:現ダンジョン}
					ENDSELECT
				CASE "7"
					IF !RANGE(FLAG:現Y-1, 0, FLAG:最大Y-1)
						CLEARLINE 1
						GOTO PRINT
					ENDIF
					IF !RANGE(FLAG:現X-1, 0, FLAG:最大X-1)
						CLEARLINE 1
						GOTO PRINT
					ENDIF
					CALL SET_FLOOR_ANALYZE(2, FLAG:現ダンジョン, FLAG:現M, FLAG:現X, FLAG:現Y-1)
					CALLFORM CAN_ENTER_{FLAG:現ダンジョン},FLAG:現X-1,FLAG:現Y-1
					IF RESULT == 0
						CLEARLINE 1
						GOTO PRINT
					ENDIF
					CALL WALK_DUNGEON,7
				CASE "8"
					IF !RANGE(FLAG:現Y-1, 0, FLAG:最大Y-1)
						CLEARLINE 1
						GOTO PRINT
					ENDIF
					CALL SET_FLOOR_ANALYZE(2, FLAG:現ダンジョン, FLAG:現M, FLAG:現X, FLAG:現Y-1)
					CALLFORM CAN_ENTER_{FLAG:現ダンジョン},FLAG:現X,FLAG:現Y-1
					IF RESULT == 0
						CLEARLINE 1
						GOTO PRINT
					ENDIF
					CALL WALK_DUNGEON,8
				CASE "9"
					IF !RANGE(FLAG:現Y-1, 0, FLAG:最大Y-1)
						CLEARLINE 1
						GOTO PRINT
					ENDIF
					IF !RANGE(FLAG:現X+1, 0, FLAG:最大X-1)
						CLEARLINE 1
						GOTO PRINT
					ENDIF
					CALL SET_FLOOR_ANALYZE(2, FLAG:現ダンジョン, FLAG:現M, FLAG:現X, FLAG:現Y-1)
					CALLFORM CAN_ENTER_{FLAG:現ダンジョン},FLAG:現X+1,FLAG:現Y-1
					IF RESULT == 0
						CLEARLINE 1
						GOTO PRINT
					ENDIF
					CALL WALK_DUNGEON,9
				CASE "4"
					IF !RANGE(FLAG:現X-1, 0, FLAG:最大X-1)
						CLEARLINE 1
						GOTO PRINT
					ENDIF
					CALL SET_FLOOR_ANALYZE(2, FLAG:現ダンジョン, FLAG:現M, FLAG:現X-1, FLAG:現Y)
					CALLFORM CAN_ENTER_{FLAG:現ダンジョン},FLAG:現X-1,FLAG:現Y
					IF RESULT == 0
						CLEARLINE 1
						GOTO PRINT
					ENDIF
					CALL WALK_DUNGEON,4
				CASE "6"
					IF !RANGE(FLAG:現X+1, 0, FLAG:最大X-1)
						CLEARLINE 1
						GOTO PRINT
					ENDIF
					CALL SET_FLOOR_ANALYZE(2, FLAG:現ダンジョン, FLAG:現M, FLAG:現X+1, FLAG:現Y)
					CALLFORM CAN_ENTER_{FLAG:現ダンジョン},FLAG:現X+1,FLAG:現Y
					IF RESULT == 0
						CLEARLINE 1
						GOTO PRINT
					ENDIF
					CALL WALK_DUNGEON,6
				CASE "1"
					IF !RANGE(FLAG:現X-1, 0, FLAG:最大X-1)
						CLEARLINE 1
						GOTO PRINT
					ENDIF
					IF !RANGE(FLAG:現Y+1, 0, FLAG:最大Y-1)
						CLEARLINE 1
						GOTO PRINT
					ENDIF
					CALL SET_FLOOR_ANALYZE(2, FLAG:現ダンジョン, FLAG:現M, FLAG:現X, FLAG:現Y-1)
					CALLFORM CAN_ENTER_{FLAG:現ダンジョン},FLAG:現X-1,FLAG:現Y+1
					IF RESULT == 0
						CLEARLINE 1
						GOTO PRINT
					ENDIF
					CALL WALK_DUNGEON,1
				CASE "2"
					IF !RANGE(FLAG:現Y+1, 0, FLAG:最大Y-1)
						CLEARLINE 1
						GOTO PRINT
					ENDIF
					CALL SET_FLOOR_ANALYZE(2, FLAG:現ダンジョン, FLAG:現M, FLAG:現X, FLAG:現Y+1)
					CALLFORM CAN_ENTER_{FLAG:現ダンジョン},FLAG:現X,FLAG:現Y+1
					IF RESULT == 0
						CLEARLINE 1
						GOTO PRINT
					ENDIF
					CALL WALK_DUNGEON,2
				CASE "3"
					IF !RANGE(FLAG:現X+1, 0, FLAG:最大X-1)
						CLEARLINE 1
						GOTO PRINT
					ENDIF
					IF !RANGE(FLAG:現Y+1, 0, FLAG:最大Y-1)
						CLEARLINE 1
						GOTO PRINT
					ENDIF
					CALL SET_FLOOR_ANALYZE(2, FLAG:現ダンジョン, FLAG:現M, FLAG:現X, FLAG:現Y-1)
					CALLFORM CAN_ENTER_{FLAG:現ダンジョン},FLAG:現X+1,FLAG:現Y+1
					IF RESULT == 0
						CLEARLINE 1
						GOTO PRINT
					ENDIF
					CALL WALK_DUNGEON,3
				;CASE "c"
					;IF NUM_SUMMONER(1) == 0
					;	PRINTW 誰もＣＯＭＰを使えない
					;	CLEARLINE 2
					;	GOTO INPUT_LOOP
					;ENDIF
				;	CALL COMMAND_COMP_FIELD
				CASE "i"
				;	CALL COMMAND_ITEM_FIELD
				CASE "m"
				;	CALL COMMAND_MAGIC_FIELD_LIST,2
				;CASE "e"
				;	CALL COMMAND_MAGIC_FIELD_LIST,1
				CASE "0", "U", "V", "W", "X", "Y", "Z"
					IF RESULTS == "0"
						ONEINPUTS
						LOCAL = TOINT(RESULTS)
					ELSE
						SELECTCASE RESULTS
							CASE "U"
								LOCAL = 1
							CASE "V"
								LOCAL = 2
							CASE "W"
								LOCAL = 3
							CASE "X"
								LOCAL = 4
							CASE "Y"
								LOCAL = 5
							CASE "Z"
								LOCAL = 6
						ENDSELECT
					ENDIF
					IF RANGE(LOCAL, 1, 6) && POS(LOCAL) >= 0
					;	CALL COMMAND_MAGIC_FIELD, 2, POS(LOCAL), 1
					ELSE
						CLEARLINE 2
					ENDIF
				;CASE "E"
				;	CALL EQUIPMENT
				;CASE "f"
				;	CALL FORM_INPUT
				;CASE "s"
				;	CALL SHOP_COM_110
				;CASE "M"
				;	CALL SWITCH_MAG
				;CASE "*"
				;	CALL DUNGEON_MUFUFU
				;CASE "L"
				;	CALL MESSAGE_WINDOW_LOG(, , , , , 1)
				CASEELSE
					GOTO INPUT_LOOP
			ENDSELECT
		CASE 1
			SELECTCASE RESULTS
				CASE "f"
					SELECTCASE DA:(FLAG:現X):(FLAG:現Y)
						CASE -9
						;	CALL DUNGEON_TERMINAL
						CASE -19
						;	CALL FOUNTAIN_OF_TRISH
						CASE -29
							CALL DUNGEON_ELEVATOR
						CASEELSE
							CALLFORM EVENT_CHECK_DUNGEON_{FLAG:現ダンジョン}
					ENDSELECT
				CASE "w"
					IF !RANGE(FLAG:現Y-1, 0, FLAG:最大Y-1)
						CLEARLINE 1
						GOTO PRINT
					ENDIF
					CALL SET_FLOOR_ANALYZE(2, FLAG:現ダンジョン, FLAG:現M, FLAG:現X, FLAG:現Y-1)
					CALLFORM CAN_ENTER_{FLAG:現ダンジョン},FLAG:現X,FLAG:現Y-1
					IF RESULT == 0
						CLEARLINE 1
						GOTO PRINT
					ENDIF
					CALL WALK_DUNGEON,8
				CASE "a"
					IF !RANGE(FLAG:現X-1, 0, FLAG:最大X-1)
						CLEARLINE 1
						GOTO PRINT
					ENDIF
					CALL SET_FLOOR_ANALYZE(2, FLAG:現ダンジョン, FLAG:現M, FLAG:現X-1, FLAG:現Y)
					CALLFORM CAN_ENTER_{FLAG:現ダンジョン},FLAG:現X-1,FLAG:現Y
					IF RESULT == 0
						CLEARLINE 1
						GOTO PRINT
					ENDIF
					CALL WALK_DUNGEON,4
				CASE "d"
					IF !RANGE(FLAG:現X+1, 0, FLAG:最大X-1)
						CLEARLINE 1
						GOTO PRINT
					ENDIF
					CALL SET_FLOOR_ANALYZE(2, FLAG:現ダンジョン, FLAG:現M, FLAG:現X+1, FLAG:現Y)
					CALLFORM CAN_ENTER_{FLAG:現ダンジョン},FLAG:現X+1,FLAG:現Y
					IF RESULT == 0
						CLEARLINE 1
						GOTO PRINT
					ENDIF
					CALL WALK_DUNGEON,6
				CASE "s"
					IF !RANGE(FLAG:現Y+1, 0, FLAG:最大Y-1)
						CLEARLINE 1
						GOTO PRINT
					ENDIF
					CALL SET_FLOOR_ANALYZE(2, FLAG:現ダンジョン, FLAG:現M, FLAG:現X, FLAG:現Y+1)
					CALLFORM CAN_ENTER_{FLAG:現ダンジョン},FLAG:現X,FLAG:現Y+1
					IF RESULT == 0
						CLEARLINE 1
						GOTO PRINT
					ENDIF
					CALL WALK_DUNGEON,2
				;CASE "5"
					;IF NUM_SUMMONER(1) == 0
					;	PRINTW 誰もＣＯＭＰを使えない
					;	CLEARLINE 2
					;	GOTO INPUT_LOOP
					;ENDIF
					;CALL COMMAND_COMP_FIELD
				CASE "0"
					IF RESULTS == "0"
						ONEINPUTS
						LOCAL = TOINT(RESULTS)
					ELSE
						SELECTCASE RESULTS
							CASE "U"
								LOCAL = 1
							CASE "V"
								LOCAL = 2
							CASE "W"
								LOCAL = 3
							CASE "X"
								LOCAL = 4
							CASE "Y"
								LOCAL = 5
							CASE "Z"
								LOCAL = 6
						ENDSELECT
					ENDIF
					IF RANGE(LOCAL, 1, 6) && POS(LOCAL) >= 0
					;	CALL COMMAND_MAGIC_FIELD, 2, POS(LOCAL), 1
					ELSE
						CLEARLINE 2
					ENDIF
				CASE "1"
				;	CALL COMMAND_ITEM_FIELD
				CASE "2"
				;	CALL COMMAND_MAGIC_FIELD_LIST,2
				;CASE "3"
				;	CALL COMMAND_MAGIC_FIELD_LIST,1
				;CASE "4"
				;	CALL EQUIPMENT
				;CASE "6"
				;	CALL FORM_INPUT
				;CASE "7"
				;	CALL SHOP_COM_110
				;CASE "8"
				;	CALL SWITCH_MAG
				;CASE "9"
				;	CALL DUNGEON_MUFUFU
				;CASE "+"
				;	CALL MESSAGE_WINDOW_LOG(, , , , , 1)
				CASEELSE
					GOTO INPUT_LOOP
			ENDSELECT
		CASEELSE
		FLAG:ダンジョン内操作設定 = 0
		GOTO PRINT
	ENDSELECT
WEND
;=====================================================================
;現在のフロアを描画
;=====================================================================
@SHOW_FLOOR
#LOCALSIZE 2
#LOCALSSIZE 1
#DIM 改行フラグ, 1
CUSTOMDRAWLINE =
CALLFORM FLOORNAME_{FLAG:現ダンジョン}
;ALIGNMENT RIGHT
;PRINTFORML   ￥{MONEY,8}    ＣＯＭＰ容量： {NUM_NAKAMA() + ソフト容量()}/{FLAG:ＣＯＭＰ容量}使用中
;PRINTFORM MAG:{BASE:MASTER:ＭＡＧ,8}    
;IF FLAG:月齢 != 0 && FLAG:月齢 != 8
;	PRINTFORML {FLAG:月齢}/8 \@ FLAG:月齢ベクトル == 0 ? ＹＯＵＮＧ # ＯＬＤ \@ ＭＯＯＮ
;ELSE
;	PRINTFORML \@ FLAG:月齢 == 8 ? ＦＵＬＬ ＭＯＯＮ # ＮＥＷ ＭＯＯＮ\@
;ENDIF
ALIGNMENT CENTER
IF FLAG:最大Y < 18
	FOR LOCAL , 0 , (18 - FLAG:最大Y)/2
		PRINTL
	NEXT
ENDIF

;CALLFORM GET_DUNGEON_NAME_{FLAG:現ダンジョン}
CALLF DPOINT( , , 0 , 0 , FLAG:現M , @"ダンジョン%TOSTR(FLAG:現ダンジョン,"00")%")
FOR LOCAL:1, MAX(0, FLAG:現Y - 9 - MAX(0, ((FLAG:現Y+9)-FLAG:最大Y))), MIN(FLAG:現Y+9+MAX(0, 9-FLAG:現Y), FLAG:最大Y)
;FOR LOCAL:1, MAX(0, FLAG:現Y-20), MIN(FLAG:現Y+20, FLAG:最大Y)
	FOR LOCAL, MAX(0, FLAG:現X - 15 - MAX(0, ((FLAG:現X+15)-FLAG:最大X))), MIN(FLAG:現X+15+MAX(0, 15-FLAG:現X), FLAG:最大X)
		IF FLAG:現X == LOCAL && FLAG:現Y == LOCAL:1
			SETCOLOR 0x33ffcc
			PRINT ＠
			RESETCOLOR
			CONTINUE
		ENDIF
		IF DA:(FLAG:現X):(FLAG:現Y) % 10 == -1
		; && !((EQUIP:MASTER:ダークスキャナー || EQUIP:MASTER:ハニー・ビー) && NUM_SUMMONER() ) && FLAG:ライトマ == 0
			SETCOLOR 0x404040
			IF ABS(LOCAL-FLAG:現X)+ABS(LOCAL:1-FLAG:現Y) > 1
				PRINT ？
				RESETCOLOR
				CONTINUE
			ENDIF
		ENDIF
		IF DPOINT( , , LOCAL , LOCAL:1) > 0
			CALL DG_GET_TILE(LOCAL, LOCAL:1, FLAG:現M, FLAG:現ダンジョン)
			PRINTFORM %RESULTS%
		ELSE
			PRINT 　
		ENDIF
		RESETCOLOR
	NEXT
	PRINTL
NEXT
ALIGNMENT LEFT

IF FLAG:最大Y < 18
	FOR LOCAL , 0 , (18 - FLAG:最大Y+1)/2
		PRINTL
	NEXT
ENDIF

;---- EDIT 004 DEL START -------------------------
;IF EQUIP:MASTER:エネミーソナー  && NUM_SUMMONER()
;;	IF FLAG:エンカウント変動 == 1
;;		PRINTFORML 遭遇率：{(FLAG:エンカウント率)/2}％   
;;	ELSEIF FLAG:エンカウント変動 == 2
;;		PRINTFORML 遭遇率：{(FLAG:エンカウント率)*2}％   
;;	ELSE
;		PRINTFORML 遭遇率：{FLAG:エンカウント率}％   
;;	ENDIF
;ENDIF
;---- EDIT 004 DEL END ---------------------------
;---- EDIT 004 ADD START -------------------------
;改行 ;改行フラグ
改行フラグ = 0
LOCALS = 

;IF EQUIP:MASTER:エネミーソナー  && NUM_SUMMONER()
;	PRINTFORM 遭遇率：{FLAG:エンカウント率, 3}％   
;	改行フラグ = 1
;ENDIF
;IF EQUIP:MASTER:キャプス・ロック  && NUM_SUMMONER()
;	PRINT CAPS-LOCK:ON   
;	改行フラグ = 1
;ENDIF
;IF FLAG:エストマ
;	PRINT エストマ効果中 
;	改行フラグ = 1
;ENDIF
;CHK:改行
SIF 改行フラグ
	PRINTL 
;---- EDIT 004 ADD END ---------------------------
;=====================================================================
;ダンジョンでのコマンドを表示して設定
;=====================================================================
@SHOW_DUNGEON_COMMAND
;PRINTL ＣＯＭＭＡＮＤ                [10]ＩＴＥＭ     [14]ＣＯＭＰ    　[l]ＬＯＧ
;PRINTL         [8]↑                 [11]ＭＡＧＩＣ   [15]ＦＯＲＭ    　[*]%ハート%
;PRINTL [4]← [5]調べる [6]→         [12]ＥＸＴＲＡ   [16]ＳＴＡＴＵＳ
;PRINTL         [2]↓                 [13]ＥＱＵＩＰ   [17]ＭＡＧ
SELECTCASE FLAG:ダンジョン内操作設定
	CASE 0
		PRINT ＣＯＭＭＡＮＤ                
		PRINTBUTTON "[i]アイテム" , "i"
		PRINT       
		;IF NUM_SUMMONER(1)
		;	PRINTBUTTON "[c]ＣＯＭＰ　　　" , "c"
		;ELSE
	;		PRINTBUTTON "[c]ＭＥＮＵ　　　" , "c"
		;ENDIF
		PRINTBUTTON "[L]ＬＯＧ" , "L"
		PRINTL
		PRINT         
		;PRINT  
		;LOCALS = [7]%UNICODE(0X2196)%
		;PRINTBUTTON LOCALS ,"7"
		;PRINT  
		PRINTBUTTON "[8]↑","8"
		;PRINT  
		;LOCALS = [9]%UNICODE(0X2197)%
		;PRINTBUTTON LOCALS ,"9"
		PRINT                  
		PRINTBUTTON "[m]スキル","m"
		PRINT     　　
		PRINTBUTTON "[f]陣形　　　　　","f"
		;SIF FLAG:ムフフ展開
		;	PRINTBUTTON "[*]" + ハート() , "*"
		PRINTL
		PRINTBUTTON "[4]←","4"
		PRINT  
		PRINTBUTTON "[5]調べる","5"
		PRINT  
		PRINTBUTTON "[6]→","6"
		PRINT          
		;PRINTBUTTON "[e]ＥＸＴＲＡ","e"
		;PRINT     
		PRINTBUTTON "[s]ステータス","s"
		PRINTL
		PRINT         
		;PRINT  
		LOCALS = [1]%UNICODE(0X2199)%
		;PRINTBUTTON LOCALS ,"1"
		;PRINT  
		PRINTBUTTON "[2]↓","2"
		PRINT                  
		;PRINT  
		;LOCALS = [3]%UNICODE(0X2198)%
		;PRINTBUTTON LOCALS ,"3"
		PRINTBUTTON "[E]装備","E"
		;PRINT     
		;PRINTBUTTON "[M]ＭＡＧ","M"
		PRINTL
		CUSTOMDRAWLINE =
		PRINTL
	CASE 1
		PRINT ＣＯＭＭＡＮＤ                
		PRINTBUTTON "[1]ＩＴＥＭ" , "1"
		PRINT       
		;IF NUM_SUMMONER(1)
		;	PRINTBUTTON "[5]ＣＯＭＰ　　　" , "5"
		;ELSE
		;	PRINTBUTTON "[5]ＭＥＮＵ　　　" , "5"
		;ENDIF
		PRINTBUTTON "[+]ＬＯＧ" , "+"
		PRINTL
		PRINT         
		PRINTBUTTON "[w]↑","w"
		PRINT                  
		PRINTBUTTON "[2]ＭＡＧＩＣ","2"
		PRINT     
		PRINTBUTTON "[6]ＦＯＲＭ　　　","6"
		;SIF FLAG:ムフフ展開
		;	PRINTBUTTON "[9]" + ハート() , "9"
		PRINTL
		PRINTBUTTON "[a]←","a"
		PRINT  
		PRINTBUTTON "[f]調べる","f"
		PRINT  
		PRINTBUTTON "[d]→","d"
		PRINT          
		PRINTBUTTON "[3]ＥＸＴＲＡ","3"
		PRINT     
		PRINTBUTTON "[7]ＳＴＡＴＵＳ","7"
		PRINTL
		PRINT         
		PRINTBUTTON "[s]↓","s"
		PRINT                  
		PRINTBUTTON "[4]ＥＱＵＩＰ","4"
		PRINT     
		PRINTBUTTON "[8]ＭＡＧ","8"
		PRINTL
		CUSTOMDRAWLINE =
		PRINTL
		CASEELSE
		FLAG:ダンジョン内操作設定 = 0
		CALL SHOW_DUNGEON_COMMAND
ENDSELECT

;=======================================================================
;指定したマスに進入可能か・基本
;=======================================================================
@CAN_ENTER,ARG,ARG:1
;マップの最小・最大範囲超えてたら無理
SIF ARG < 0 || ARG > FLAG:最大X || ARG:1 < 0 || ARG:1 > FLAG:最大Y
	RETURN 0
;とりあえず(壁,千,早)は無理
SIF DA:ARG:(ARG:1) % 10 == 0
	RETURN 0

RETURN 1

;=====================================================================
;宝箱発見処理
;=====================================================================
@GET_TREASURE,ARG,ARG:1,ARG:2,ARG:3,ARG:4 = -1
PRINTL 箱が置いてある。 
CALL INPUT_YN,"開ける","開けない"

IF RESULT == 0
	CALL SE("ダンジョン","宝箱","開")
	PRINTFORMW 宝箱を開けた。
	;CALL CHECK_ITEMMAX,ARG
	IF RESULT == 0
		CALL SE("ダンジョン","宝箱","アイテムゲット")
		PRINTFORMW %ITEMNAME:ARG%を{ARG:1}個手に入れた
		CALL GET_ITEM,ARG,ARG:1
		DA:(FLAG:現X):(FLAG:現Y) = 1
		IF ARG:4 >= 0
			SETBIT ダンジョンフラグ:(ARG:2):(ARG:3), ARG:4
		ELSE
			ダンジョンフラグ:(ARG:2):(ARG:3) = 1
		ENDIF
		RETURN 1
	ELSE
		PRINTFORMW %ITEMNAME:ARG%を{ARG:1}個見つけたが持ちきれなかった
		RETURN 0
	ENDIF
ELSEIF RESULT == 1
	RETURN 0
ENDIF

;=====================================================================
;出口処理
;=====================================================================
@DUNGEON_EXIT
PRINTL 出口がある。外に出ますか？ 
CALL INPUT_YN,"Yes","No"

IF RESULT == 0
	CALL SEPLAY(17)
	FLAG:脱出 = 1
	RETURN 999
ELSEIF RESULT == 1
	RETURN 0
ENDIF

;=====================================================================
;昇り階段処理
;=====================================================================
@DUNGEON_UPSTAIRS,ARG,ARG:1,ARG:2
PRINTL 昇り階段がある。昇りますか？ 
CALL INPUT_YN,"Yes","No"

IF RESULT == 0
	CALL SEPLAY(17)
	FLAG:現M = ARG
	FLAG:現X = ARG:1
	FLAG:現Y = ARG:2
	;エストマの効果リセット挟みませてもらいます
	;CALL ENCOUNTER_CHANGER
	;現在のフロアデータを読み込み
	CALL MAKE_FLOOR, FLAG:現ダンジョン
	CALL AUTOMAP
	RETURN 1
ELSEIF RESULT == 1
	RETURN 0
ENDIF

;=====================================================================
;昇り階段処理ID版
;=====================================================================
@DUNGEON_UPSTAIRS_ID,ARG,ARG:1
PRINTL 昇り階段がある。昇りますか？ 
CALL INPUT_YN,"Yes","No"

IF RESULT == 0
	CALL SEPLAY(17)
	FLAG:現M = ARG
	;エストマの効果リセット挟みませてもらいます
	;CALL ENCOUNTER_CHANGER
	;現在のフロアデータを読み込み
	CALL MAKE_FLOOR, FLAG:現ダンジョン
	;座標移動
	FLAG:現X = SEARCH_ID(ARG:1) /100
	FLAG:現Y = SEARCH_ID(ARG:1) %100
	CALL AUTOMAP
	RETURN 1
ELSEIF RESULT == 1
	RETURN 0
ENDIF

;=====================================================================
;下り階段処理
;=====================================================================
@DUNGEON_DOWNSTAIRS,ARG,ARG:1,ARG:2
PRINTL 下り階段がある。下りますか？ 
CALL INPUT_YN,"Yes","No"

IF RESULT == 0
	CALL SEPLAY(18)
	FLAG:現M = ARG
	FLAG:現X = ARG:1
	FLAG:現Y = ARG:2
	;エストマの効果リセット挟みませてもらいます
	;CALL ENCOUNTER_CHANGER
	;現在のフロアデータを読み込み
	CALL MAKE_FLOOR, FLAG:現ダンジョン
	CALL AUTOMAP
	RETURN 1
ELSEIF RESULT == 1
	RETURN 0
ENDIF

;=====================================================================
;下り階段処理ID版
;=====================================================================
@DUNGEON_DOWNSTAIRS_ID,ARG,ARG:1
PRINTL 下り階段がある。下りますか？ 
CALL INPUT_YN,"Yes","No"

IF RESULT == 0
	CALL SEPLAY(18)
	FLAG:現M = ARG
	;エストマの効果リセット挟みませてもらいます
	;CALL ENCOUNTER_CHANGER
	;現在のフロアデータを読み込み
	CALL MAKE_FLOOR, FLAG:現ダンジョン
	;座標移動
	FLAG:現X = SEARCH_ID(ARG:1) /100
	FLAG:現Y = SEARCH_ID(ARG:1) %100
	CALL AUTOMAP
	RETURN 1
ELSEIF RESULT == 1
	RETURN 0
ENDIF
;===================================================================
;ID捜査
;===================================================================
@SEARCH_ID(ARG)
#FUNCTION
FOR LOCAL,0,FLAG:最大X
	FOR LOCAL:1,0,FLAG:最大Y
		IF DA:(LOCAL):(LOCAL:1) == ARG
			RETURNF LOCAL*100+LOCAL:1
		ENDIF
	NEXT
NEXT
RETURNF LOCAL*100+LOCAL:1

;=================================================
;   sub DG_GET_TILE
;=================================================
;   タイル文字取得
;-------------------------------------------------
; Input:
;  ARG:0				X座標
;  ARG:1				Y座標
;  ARG:2				M番号
;  ARG:3				ダンジョン番号
; Output:
;  RESULTS				タイル文字
;-------------------------------------------------
@DG_GET_TILE(ARG:0, ARG:1, ARG:2, ARG:3)
#DIM LX
#DIM LY
#DIM LM
#DIM LD
#DIM TILE_VAL
#DIMS KEY
#LOCALSSIZE 1

LX = ARG:0
LY = ARG:1
LM = ARG:2
LD = ARG:3
LOCALS =
KEY =
TILE_VAL = DA:LX:LY


IF (TILE_VAL % 10) == -1
	KEY = D
ELSE
	KEY = {TILE_VAL % 10}
ENDIF
TRYCCALLFORM TILE_MARK_COMMON_{LD}_%KEY%, TILE_VAL, LX, LY
	SIF RESULT == 1
		GOTO NO_COMMON
	LOCALS = %RESULTS%
CATCH
	$NO_COMMON
	TRYCCALLFORM TILE_MARK_ID_{LD}_{LM}_% \@TILE_VAL < 0 ? m # \@%{ABS(TILE_VAL)}
		LOCALS = %RESULTS%
	CATCH
		;- DG:タイル標準文字
		CALL DG_BASE_TILE(LX, LY, LM, LD)
		LOCALS = %RESULTS%
	ENDCATCH
ENDCATCH

RESULTS = %LOCALS%


;=================================================
;   sub DG_BASE_TILE
;=================================================
;   タイル標準文字
;-------------------------------------------------
; Input:
;  ARG:0				X座標
;  ARG:1				Y座標
;  ARG:2				M番号
;  ARG:3				ダンジョン番号
; Output:
;  RESULTS				タイル標準文字
;-------------------------------------------------
@DG_BASE_TILE(ARG:0, ARG:1, ARG:2, ARG:3)
#DIM LX
#DIM LY
#DIM LM
#DIM LD
#DIM TILE_VAL
#LOCALSSIZE 1

LX = ARG:0
LY = ARG:1
LM = ARG:2
LD = ARG:3
LOCALS=
TILE_VAL = DA:LX:LY

SELECTCASE TILE_VAL % 10
	CASE 0
		IF ABS(TILE_VAL/10) == 1
			;上面
			;暗
			SETCOLOR 0Xc4c2c5
			;明
			;SETCOLOR 0Xc3c3c3
			;LOCALS = %UNICODE(0X2637)%
			LOCALS = ■
		ELSEIF ABS(TILE_VAL/10) == 2
			;側面
			;暗
			SETCOLOR 0X515d59
			;明
			;SETCOLOR 0X878787
			LOCALS = %UNICODE(0X2630)%
		;机
		ELSEIF TILE_VAL/10 == 3
			;SETCOLOR 0Xb1b1b1
			SETCOLOR 0Xcabb92
			LOCALS = %UNICODE(0x2588)%%UNICODE(0x2588)%
		;窓
		ELSEIF TILE_VAL/10 == 4
			SETCOLOR 0Xd5f2fa
			LOCALS = ■
		
		ELSEIF TILE_VAL/10 == 5
			LOCALS = 　
		ELSE
		;壁
			SETCOLOR 0Xc4c2c5
			LOCALS = ■
		ENDIF
	CASE 1
		SETCOLOR 0Xb4a993
		LOCALS = □
	CASE 2
		SETCOLOR 0Xedae79
		LOCALS = %UNICODE(0X2617)%
	CASE 3
		SETCOLOR (SET_COLOR_FUNC("亜美"))
		LOCALS = 宝
	CASE 4
		LOCALS = ！
	CASE 5
		IF GET_FLOOR_ANALYZE_T(LX, LY) == 2
			LOCALS = 罠
		ELSE
			SETCOLOR 0Xb4a993
			LOCALS = □
		ENDIF
		
	CASE 6
		;昇り
		LOCALS = 昇
	CASE 7
		;降り
		LOCALS = 降
	CASE 8
		LOCALS = 出
	CASE -1 
		SETCOLOR 0x404040
		LOCALS = □
	CASE -9
		SELECTCASE -TILE_VAL / 10
			CASE 0
				LOCALS = %UNICODE(0X260E)%
			CASE 1
				LOCALS = %UNICODE(0X2742)%
			CASE 2
				LOCALS = Ｅ
		ENDSELECT

	CASEELSE
		TRYCCALLFORM TILE_MARK_{LD}_{LM}_{LX}_{LY}
			LOCALS = %RESULTS%
		CATCH
			LOCALS = ■
		ENDCATCH
ENDSELECT

RESULTS = %LOCALS%

;---- EDIT 021 ADD END   -------------------------

;=====================================================================
;エレベーター
;=====================================================================
@DUNGEON_ELEVATOR, ARG = -29
CUSTOMDRAWLINE =
PRINTL ＞エレベーターがある。
VARSET RESULT, -1
VARSET RESULTS
LOCAL:1 = FLAG:現M
CALLFORM DUNGEON_ELEVATOR_{FLAG:現ダンジョン}, ARG
LOCAL:2 = RESULT
FOR LOCAL, 0, 25
	IF RESULT:LOCAL >= 0 && RESULT:LOCAL != LOCAL:1
		PRINTFORM [{LOCAL}] 
		IF !STRLENS(RESULTS:LOCAL)
			FLAG:現M = RESULT:LOCAL
			CALLFORM FLOORNAME_{FLAG:現ダンジョン}
			RESULT = LOCAL:2
		ELSE
			PRINTFORML %RESULTS:LOCAL%
		ENDIF
	ENDIF
NEXT
FLAG:現M = LOCAL:1
ARRAYSHIFT RESULT, 1, 0
PRINTL [100] 乗らない
$INPUT_LOOP
INPUT
IF RESULT == 100
	RETURN 1
ELSEIF RESULT < 0 || RESULT >= VARSIZE("RESULT")
	GOTO INPUT_LOOP
ELSEIF RESULT:(RESULT+1) >= 0 && RESULT:LOCAL != LOCAL:1
	CALL DUNGEON_WORP_ID, RESULT:(RESULT+1), ARG, 1
	CALL SE("ダンジョン", "エレベーター")
ELSE
	GOTO INPUT_LOOP
ENDIF

;=====================================================================
;特定のマップの特定の座標へ移動_ID
;=====================================================================
@DUNGEON_WORP_ID,ARG,ARG:1,ARG:2 = 0
FLAG:現M = ARG
;現在のフロアデータを読み込み
CALL MAKE_FLOOR, FLAG:現ダンジョン
	;座標移動
	FLAG:現X = SEARCH_ID(ARG:1) /100
	FLAG:現Y = SEARCH_ID(ARG:1) %100
	CALL AUTOMAP
;ARG:2 == 1 でなければ移動後のダンジョンイベント呼び出し
SIF ARG:2 == 0
	CALLFORM EVENT_ENTER_DUNGEON_{FLAG:現ダンジョン},0
	RETURN 1

;---- EDIT 016 ADD START -------------------------
;=====================================================================
;汎用敵配置処理
;	#ダンジョン毎に定義が必要な関数(実際動かしてるところはエコービルなどをみてください)
;		@CLASS_NUM_X 			敵の出てくる種族数。1~3くらいを推奨す
;		@CLASS_NUM_COMMON,ARG	敵の種類数の基本的な数値を返す
;		@ENEMY_NUM_X,ARG		敵の総数。種族数も送るので1~10の間で設定を
;						 	 	なお、1~10の間に自動的に丸めるので設定段階では10超えてもいいです
;		@ENEMY_NUM_COMMON,ARG	敵の総数の基本的な数値を返す
;		@ENEMY_X				敵の内容、RESULTが敵のキャラ番号、RESULT:1が敵のLVとなります
;		@ENEMYSET_X				上記のセット版、RESULT:偶数、RESULT:奇数が番号/LVとなります。組み合わせを固定で組みたい場合はこちら
;		@SET_ENEMY_STATUS_X		敵ステータスの特別変化。ダンジョン毎に能力をある程度変える場合はここでどうぞ
;=====================================================================
@ENEMY_TABLE
#DIM CLASS_NUM, 1
#DIM ENEMY_NUM, 1
#DIM MAXENEMY, 1
#DIM MINENEMY, 1
#DIM ENEMY, 10
#DIM ENEMYLV, 10
VARSET RESULT
VARSET ENEMY, -1
;-------------D&T風初期化--------------------
VARSET LOCAL
VARSET TFLAG
;関連フラグ全初期化
FOR LOCAL, 1, 11
	VARSET CFLAG:LOCAL:0, 0
	VARSET ABL:LOCAL:0, 0
	VARSET TALENT:LOCAL:0, 0
	VARSET BASE:LOCAL:0, 0
	VARSET CALLNAME:LOCAL
	CFLAG:LOCAL:パートナー選択可 = -1
NEXT
;-------------------------------------------

;最初に種族数を取得
TRYCCALLFORM CLASS_NUM_{FLAG:現ダンジョン}
	CLASS_NUM = RESULT
CATCH
	;一応、定義ファイルがない場合、デフォルトの数値を代入
	SELECTCASE RAND:100
		CASE IS < 40
			CLASS_NUM = 1
		CASE IS < 80
			CLASS_NUM = 2
		CASEELSE
			CLASS_NUM = 3
	ENDSELECT
ENDCATCH
;敵の総数を取得
TRYCCALLFORM ENEMY_NUM_{FLAG:現ダンジョン}, CLASS_NUM
	ENEMY_NUM = LIMIT(RESULT, CLASS_NUM, 10)
CATCH
	ENEMY_NUM = LIMIT(RESULT, CLASS_NUM*2, CLASS_NUM*4)
ENDCATCH
LOCAL = 0
;組み合わせ配置なら、それに
;TRYCCALLFORM CALLFORM ENEMYSET_{FLAG:現ダンジョン}, CLASS_NUM
;	FOR LOCAL, 0, CLASS_NUM+1
;		ENEMY:LOCAL = RESULT:(LOCAL*2)
;		ENEMYLV:LOCAL = RESULT:(LOCAL*2+1)
;	NEXT
;CATCH
	;組み合わせがランダムならこっち
	WHILE LOCAL < CLASS_NUM
		CALLFORM ENEMY_{FLAG:現ダンジョン}, CLASS_NUM
		;同一の敵が来ないようにする
		SIF MATCH(ENEMY, RESULT)
			CONTINUE
		ENEMY:LOCAL = RESULT
		ENEMYLV:LOCAL = RESULT:1
		LOCAL ++
	WEND
;ENDCATCH
LOCAL = 0
;LOCAL:1~10に1~10を入れる
FOR LOCAL, 1, 11
	LOCAL:LOCAL = LOCAL
NEXT
;LOCAL:1~10をシャッフル
FOR LOCAL, 1, 11
	SWAP LOCAL:LOCAL, LOCAL:RAND(1, 10)
NEXT

;実際の配置
FOR LOCAL, 1, ENEMY_NUM+1
	LOCAL:11 = LOCAL:LOCAL
	;SIF POS(LOCAL:11) >= 0
	;	CONTINUE
	LOCAL:12 = LOCAL-1 < CLASS_NUM ? LOCAL-1 # RAND:CLASS_NUM
	CALL SET_ENEMY_STATUS, ENEMY:(LOCAL:12) , ENEMYLV:(LOCAL:12), LOCAL:11
	;CALL SET_ENEMY, LOCAL:11, ENEMY:(LOCAL:12), ENEMYLV:(LOCAL:12)
	;ここでステータス変化させる場合の関数を呼ぶ
	;TRYCALLFORM SET_ENEMY_STATUS_{FLAG:現ダンジョン}, CHARANUM - 1
NEXT

;実際の配置
;FOR LOCAL, 0, ENEMY_NUM
;	LOCAL:1 = LOCAL:(LOCAL + 7)
;	SIF POS(LOCAL:1) >= 0
;		CONTINUE
;	LOCAL:2 = LOCAL < CLASS_NUM ? LOCAL # RAND:CLASS_NUM
;	CALL SET_ENEMY, LOCAL:1, ENEMY:(LOCAL:2), ENEMYLV:(LOCAL:2)
;	;ここでステータス変化させる場合の関数を呼ぶ
;	TRYCALLFORM SET_ENEMY_STATUS_{FLAG:現ダンジョン}, CHARANUM - 1
;NEXT
