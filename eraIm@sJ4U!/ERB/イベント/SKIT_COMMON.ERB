;コンフィグで色々調整する部分
@SKIT_ABLE_COMMON(ARG)


;実行できるスキットを検索
;更新はSHOPが呼び出される瞬間
@SEARCH_SKIT_ABLE

VARSET LOCAL:1
VARSET SKIT
FOR LOCAL, 0, 1000
	TRYCALLFORM SKIT_ABLE{LOCAL}
	IF RESULT
		;PRINTFORML K:{K:(LOCAL:1)} = {LOCAL:0}
		SKIT:(LOCAL:1) = LOCAL
		LOCAL:1 += 1
		RESULT = 0
	ENDIF
NEXT

;シナリオS サブイベントはE  アフターコミュはA スキットはK
;可能なスキットがあれば、スキットのタイトルを枠外に表示
@SKIT
;K:0でK:1が存在するなら配列をずらす
CALL SEARCH_SKIT_ABLE
IF SKIT > 0
	TRYCALLFORM SKITNAME{SKIT}
	SETCOLOR SET_COLOR_FUNC("亜美")
	PRINTFORMLC [150] - %TSTR%
	RESETCOLOR
ENDIF
;IF SKIT > 0
;	CALLFORM SKITNAME{SKIT}
;	TSTR =[SKT] - %TSTR%
;	PRINTBUTTONLC TSTR , 150
;ENDIF


;-------------------------------------------------
;未読判定関数@FIRSTSKIT
;式中で使用する関数です。理論上無限にイベントを登録できます。
;特に使用法に指定のない、イベントの初回判定用関数です。
;ARGはイベント番号、ARG:1はキャラ登録番号（省略するとMASTER）、ARG:2が真だと初回判定を更新しない（参照のみ）
;CSTR:0で管理します
;備考…キャラクター登録番号を指定するとシナリオやその他のイベントと被る恐れがあるので、基本的にはMASTERに登録
;-------------------------------------------------
@FIRSTSKIT(ARG, ARG:1 = -2, ARG:2)
#FUNCTION
ARG:1 = ARG:1 == -2 ? 0 # ARG:1
RETURNF FIRSTPROCESS_SKIT(ARG:1, @"SKIT%TOSTR(ARG)%", ARG:2)

;汎用初回判定処理
;引数はキャラ番号、判定文字列、更新の有無、使用するCSTRの番号
@FIRSTPROCESS_SKIT(ARG, ARGS, ARG:1, ARG:2 = 4)
#FUNCTION
;空文字列の場合、/を1つ入れる
SIF CSTR:ARG:(ARG:2) == ""
	CSTR:ARG:(ARG:2) = /
;初回判定済みなら0を返す
SIF STRCOUNT(CSTR:ARG:(ARG:2), @"/%ARGS%/")
	RETURNF 0
;初回判定を更新しないチェックが無ければ更新
SIF !ARG:1
	CSTR:ARG:(ARG:2) = %CSTR:ARG:(ARG:2)%%ARGS%/
;初回なので1を返す
RETURNF 1



