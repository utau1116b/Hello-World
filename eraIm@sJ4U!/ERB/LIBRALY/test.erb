;ソートのテストだよ
;@EVENTFIRST
@FirstTest
REPEAT 10000
	A:COUNT = RAND:65536
REND

;ARRAYCOPY A, B
CALL BUBBLE_SORT

;ARRAYCOPY A, B
CALL COMB_SORT

;ARRAYCOPY A, B
CALL QUICK_SORT

QUIT

;バブルソート
@BUBBLE_SORT
PRINTL 1. Bubble Sort
C = GETMILLISECOND()
FOR LOCAL, 0, 10000
	FOR LOCAL:1, 9999, LOCAL, -1
		SIF B:(LOCAL:1 - 1) > B:(LOCAL:1)
			SWAP B:(LOCAL:1 - 1), B:(LOCAL:1)
	NEXT
NEXT
C:1 = GETMILLISECOND()

IF CHECK_SORT() == 1
	PRINTL ERROR!!
	QUIT
ENDIF

PRINTFORML Time {C:1 - C} ms

RETURN 0

;コムソート
@COMB_SORT
PRINTL 2. Comb Sort
C = GETMILLISECOND()
;櫛
LOCAL:1 = 10000 * 10 / 13
DO
	LOCAL:2 = 0
	FOR LOCAL, 0, 10000 - LOCAL:1
		IF B:LOCAL > B:(LOCAL + LOCAL:1)
			SWAP B:LOCAL, B:(LOCAL + LOCAL:1)
			LOCAL:2 = 1
		ENDIF
	NEXT
	IF LOCAL:1 == 1
		SIF LOCAL:2 == 0
			BREAK
	ELSE
		LOCAL:1 = LOCAL:1 * 10 / 13
	ENDIF
LOOP 1

C:1 = GETMILLISECOND()

IF CHECK_SORT() == 1
	PRINTL ERROR!!
	QUIT
ENDIF

PRINTFORML Time {C:1 - C} ms

RETURN 0

;クイックソート
@QUICK_SORT
PRINTL 3. Quick Sort
C = GETMILLISECOND()
CALL SORT_MAIN_QUICK, 0 , 9999
C:1 = GETMILLISECOND()

IF CHECK_SORT() == 1
	PRINTL ERROR!!
	QUIT
ENDIF

PRINTFORML Time {C:1 - C} ms

RETURN 0

@SORT_MAIN_QUICK, ARG, ARG:1
#DIM DYNAMIC LEFT, 1
#DIM DYNAMIC RIGHT, 1
#DIM DYNAMIC ARGBACK, 2
ARGBACK = ARG
ARGBACK:1 = ARG:1
IF ARG < ARG:1
	LEFT = ARG
	RIGHT = ARG:1
	LOCAL = GET_MED3(B:LEFT, B:((LEFT + RIGHT) / 2), B:RIGHT)
	WHILE 1
		WHILE (B:LEFT < LOCAL)
			LEFT += 1
		WEND
		WHILE (LOCAL < B:RIGHT)
			RIGHT -= 1
		WEND
		SIF LEFT >= RIGHT
			BREAK
		SWAP B:LEFT, B:RIGHT
		LEFT++
		RIGHT--
	WEND
	CALL SORT_MAIN_QUICK, ARGBACK, LEFT - 1
	CALL SORT_MAIN_QUICK, RIGHT + 1, ARGBACK:1
ENDIF

@GET_MED3(ARG, ARG:1, ARG:2)
#FUNCTION
IF ARG < ARG:1
	IF ARG:1 < ARG:2
		RETURNF ARG:1
	ELSEIF ARG:2 < ARG
		RETURNF ARG
	ELSE
		RETURNF ARG:2
	ENDIF
ELSE
	IF ARG:2 < ARG:1
		RETURNF ARG:1
	ELSEIF ARG < ARG:2
		RETURNF ARG
	ELSE
		RETURNF ARG:2
	ENDIF
ENDIF
RETURNF 0

;汎用処理用関数


@CHECK_SORT
#FUNCTION
REPEAT 9999
	SIF B:COUNT > B:(COUNT + 1)
		RETURNF 1
REND
RETURNF 0